/** AUTOGENERATED: run 'npm run codegen' to update */
export const enum Color {
  /**
   * VS Code UI font family.
   */
  FontFamily = 'font-family',

  /**
   * VS Code UI font weight.
   */
  FontWeight = 'font-weight',

  /**
   * VS Code UI font size.
   */
  FontSize = 'font-size',

  /**
   * VS Code Editor font family.
   */
  EditorFontFamily = 'editor-font-family',

  /**
   * VS Code Editor font weight.
   */
  EditorFontWeight = 'editor-font-weight',

  /**
   * VS Code Editor font size.
   */
  EditorFontSize = 'editor-font-size',
  /**
   * Active tab background color in an active group. Tabs are the containers
   * for editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabActiveBackground = 'tab-activeBackground',
  /**
   * Active tab background color in an unfocused group. Tabs are the containers
   * for editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabUnfocusedActiveBackground = 'tab-unfocusedActiveBackground',
  /**
   * Inactive tab background color in an active group. Tabs are the containers
   * for editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabInactiveBackground = 'tab-inactiveBackground',
  /**
   * Inactive tab background color in an unfocused group. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedInactiveBackground = 'tab-unfocusedInactiveBackground',
  /**
   * Active tab foreground color in an active group. Tabs are the containers
   * for editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabActiveForeground = 'tab-activeForeground',
  /**
   * Inactive tab foreground color in an active group. Tabs are the containers
   * for editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabInactiveForeground = 'tab-inactiveForeground',
  /**
   * Active tab foreground color in an unfocused group. Tabs are the containers
   * for editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabUnfocusedActiveForeground = 'tab-unfocusedActiveForeground',
  /**
   * Inactive tab foreground color in an unfocused group. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedInactiveForeground = 'tab-unfocusedInactiveForeground',
  /**
   * Tab background color when hovering. Tabs are the containers for editors in
   * the editor area. Multiple tabs can be opened in one editor group. There
   * can be multiple editor groups.
   */
  TabHoverBackground = 'tab-hoverBackground',
  /**
   * Tab background color in an unfocused group when hovering. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedHoverBackground = 'tab-unfocusedHoverBackground',
  /**
   * Tab foreground color when hovering. Tabs are the containers for editors in
   * the editor area. Multiple tabs can be opened in one editor group. There
   * can be multiple editor groups.
   */
  TabHoverForeground = 'tab-hoverForeground',
  /**
   * Tab foreground color in an unfocused group when hovering. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedHoverForeground = 'tab-unfocusedHoverForeground',
  /**
   * Border on the bottom of an active tab. Tabs are the containers for editors
   * in the editor area. Multiple tabs can be opened in one editor group. There
   * can be multiple editor groups.
   */
  TabActiveBorder = 'tab-activeBorder',
  /**
   * Border on the bottom of an active tab in an unfocused group. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedActiveBorder = 'tab-unfocusedActiveBorder',
  /**
   * Border to the top of an active tab. Tabs are the containers for editors in
   * the editor area. Multiple tabs can be opened in one editor group. There
   * can be multiple editor groups.
   */
  TabActiveBorderTop = 'tab-activeBorderTop',
  /**
   * Border to the top of an active tab in an unfocused group. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedActiveBorderTop = 'tab-unfocusedActiveBorderTop',
  /**
   * Border to highlight tabs when hovering. Tabs are the containers for
   * editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabHoverBorder = 'tab-hoverBorder',
  /**
   * Border to highlight tabs in an unfocused group when hovering. Tabs are the
   * containers for editors in the editor area. Multiple tabs can be opened in
   * one editor group. There can be multiple editor groups.
   */
  TabUnfocusedHoverBorder = 'tab-unfocusedHoverBorder',
  /**
   * Border on the top of modified (dirty) active tabs in an active group. Tabs
   * are the containers for editors in the editor area. Multiple tabs can be
   * opened in one editor group. There can be multiple editor groups.
   */
  TabActiveModifiedBorder = 'tab-activeModifiedBorder',
  /**
   * Border on the top of modified (dirty) inactive tabs in an active group.
   * Tabs are the containers for editors in the editor area. Multiple tabs can
   * be opened in one editor group. There can be multiple editor groups.
   */
  TabInactiveModifiedBorder = 'tab-inactiveModifiedBorder',
  /**
   * Border on the top of modified (dirty) active tabs in an unfocused group.
   * Tabs are the containers for editors in the editor area. Multiple tabs can
   * be opened in one editor group. There can be multiple editor groups.
   */
  TabUnfocusedActiveModifiedBorder = 'tab-unfocusedActiveModifiedBorder',
  /**
   * Border on the top of modified (dirty) inactive tabs in an unfocused group.
   * Tabs are the containers for editors in the editor area. Multiple tabs can
   * be opened in one editor group. There can be multiple editor groups.
   */
  TabUnfocusedInactiveModifiedBorder = 'tab-unfocusedInactiveModifiedBorder',
  /**
   * Border to separate tabs from each other. Tabs are the containers for
   * editors in the editor area. Multiple tabs can be opened in one editor
   * group. There can be multiple editor groups.
   */
  TabBorder = 'tab-border',
  /**
   * Background color of the editor pane visible on the left and right side of
   * the centered editor layout.
   */
  EditorPaneBackground = 'editorPane-background',
  /**
   * Deprecated background color of an editor group.
   */
  EditorGroupBackground = 'editorGroup-background',
  /**
   * Background color of an empty editor group. Editor groups are the
   * containers of editors.
   */
  EditorGroupEmptyBackground = 'editorGroup-emptyBackground',
  /**
   * Border color of an empty editor group that is focused. Editor groups are
   * the containers of editors.
   */
  EditorGroupFocusedEmptyBorder = 'editorGroup-focusedEmptyBorder',
  /**
   * Background color of the editor group title header when tabs are enabled.
   * Editor groups are the containers of editors.
   */
  EditorGroupHeaderTabsBackground = 'editorGroupHeader-tabsBackground',
  /**
   * Border color of the editor group title header when tabs are enabled.
   * Editor groups are the containers of editors.
   */
  EditorGroupHeaderTabsBorder = 'editorGroupHeader-tabsBorder',
  /**
   * Background color of the editor group title header when tabs are disabled
   * (`"workbench.editor.showTabs": false`). Editor groups are the containers
   * of editors.
   */
  EditorGroupHeaderNoTabsBackground = 'editorGroupHeader-noTabsBackground',
  /**
   * Border color of the editor group title header. Editor groups are the
   * containers of editors.
   */
  EditorGroupHeaderBorder = 'editorGroupHeader-border',
  /**
   * Color to separate multiple editor groups from each other. Editor groups
   * are the containers of editors.
   */
  EditorGroupBorder = 'editorGroup-border',
  /**
   * Background color when dragging editors around. The color should have
   * transparency so that the editor contents can still shine through.
   */
  EditorGroupDropBackground = 'editorGroup-dropBackground',
  /**
   * Border color for image in image preview.
   */
  ImagePreviewBorder = 'imagePreview-border',
  /**
   * Panel background color. Panels are shown below the editor area and contain
   * views like output and integrated terminal.
   */
  PanelBackground = 'panel-background',
  /**
   * Panel border color to separate the panel from the editor. Panels are shown
   * below the editor area and contain views like output and integrated
   * terminal.
   */
  PanelBorder = 'panel-border',
  /**
   * Title color for the active panel. Panels are shown below the editor area
   * and contain views like output and integrated terminal.
   */
  PanelTitleActiveForeground = 'panelTitle-activeForeground',
  /**
   * Title color for the inactive panel. Panels are shown below the editor area
   * and contain views like output and integrated terminal.
   */
  PanelTitleInactiveForeground = 'panelTitle-inactiveForeground',
  /**
   * Border color for the active panel title. Panels are shown below the editor
   * area and contain views like output and integrated terminal.
   */
  PanelTitleActiveBorder = 'panelTitle-activeBorder',
  /**
   * Drag and drop feedback color for the panel title items. The color should
   * have transparency so that the panel entries can still shine through.
   * Panels are shown below the editor area and contain views like output and
   * integrated terminal.
   */
  PanelDropBackground = 'panel-dropBackground',
  /**
   * Input box border for inputs in the panel.
   */
  PanelInputBorder = 'panelInput-border',
  /**
   * Status bar foreground color when a workspace is opened. The status bar is
   * shown in the bottom of the window.
   */
  StatusBarForeground = 'statusBar-foreground',
  /**
   * Status bar foreground color when no folder is opened. The status bar is
   * shown in the bottom of the window.
   */
  StatusBarNoFolderForeground = 'statusBar-noFolderForeground',
  /**
   * Status bar background color when a workspace is opened. The status bar is
   * shown in the bottom of the window.
   */
  StatusBarBackground = 'statusBar-background',
  /**
   * Status bar background color when no folder is opened. The status bar is
   * shown in the bottom of the window.
   */
  StatusBarNoFolderBackground = 'statusBar-noFolderBackground',
  /**
   * Status bar border color separating to the sidebar and editor. The status
   * bar is shown in the bottom of the window.
   */
  StatusBarBorder = 'statusBar-border',
  /**
   * Status bar border color separating to the sidebar and editor when no
   * folder is opened. The status bar is shown in the bottom of the window.
   */
  StatusBarNoFolderBorder = 'statusBar-noFolderBorder',
  /**
   * Status bar item background color when clicking. The status bar is shown in
   * the bottom of the window.
   */
  StatusBarItemActiveBackground = 'statusBarItem-activeBackground',
  /**
   * Status bar item background color when hovering. The status bar is shown in
   * the bottom of the window.
   */
  StatusBarItemHoverBackground = 'statusBarItem-hoverBackground',
  /**
   * Status bar prominent items foreground color. Prominent items stand out
   * from other status bar entries to indicate importance. Change mode `Toggle
   * Tab Key Moves Focus` from command palette to see an example. The status
   * bar is shown in the bottom of the window.
   */
  StatusBarItemProminentForeground = 'statusBarItem-prominentForeground',
  /**
   * Status bar prominent items background color. Prominent items stand out
   * from other status bar entries to indicate importance. Change mode `Toggle
   * Tab Key Moves Focus` from command palette to see an example. The status
   * bar is shown in the bottom of the window.
   */
  StatusBarItemProminentBackground = 'statusBarItem-prominentBackground',
  /**
   * Status bar prominent items background color when hovering. Prominent items
   * stand out from other status bar entries to indicate importance. Change
   * mode `Toggle Tab Key Moves Focus` from command palette to see an example.
   * The status bar is shown in the bottom of the window.
   */
  StatusBarItemProminentHoverBackground = 'statusBarItem-prominentHoverBackground',
  /**
   * Activity bar background color. The activity bar is showing on the far left
   * or right and allows to switch between views of the side bar.
   */
  ActivityBarBackground = 'activityBar-background',
  /**
   * Activity bar item foreground color when it is active. The activity bar is
   * showing on the far left or right and allows to switch between views of the
   * side bar.
   */
  ActivityBarForeground = 'activityBar-foreground',
  /**
   * Activity bar item foreground color when it is inactive. The activity bar
   * is showing on the far left or right and allows to switch between views of
   * the side bar.
   */
  ActivityBarInactiveForeground = 'activityBar-inactiveForeground',
  /**
   * Activity bar border color separating to the side bar. The activity bar is
   * showing on the far left or right and allows to switch between views of the
   * side bar.
   */
  ActivityBarBorder = 'activityBar-border',
  /**
   * Activity bar border color for the active item. The activity bar is showing
   * on the far left or right and allows to switch between views of the side
   * bar.
   */
  ActivityBarActiveBorder = 'activityBar-activeBorder',
  /**
   * Activity bar focus border color for the active item. The activity bar is
   * showing on the far left or right and allows to switch between views of the
   * side bar.
   */
  ActivityBarActiveFocusBorder = 'activityBar-activeFocusBorder',
  /**
   * Activity bar background color for the active item. The activity bar is
   * showing on the far left or right and allows to switch between views of the
   * side bar.
   */
  ActivityBarActiveBackground = 'activityBar-activeBackground',
  /**
   * Drag and drop feedback color for the activity bar items. The color should
   * have transparency so that the activity bar entries can still shine
   * through. The activity bar is showing on the far left or right and allows
   * to switch between views of the side bar.
   */
  ActivityBarDropBackground = 'activityBar-dropBackground',
  /**
   * Activity notification badge background color. The activity bar is showing
   * on the far left or right and allows to switch between views of the side
   * bar.
   */
  ActivityBarBadgeBackground = 'activityBarBadge-background',
  /**
   * Activity notification badge foreground color. The activity bar is showing
   * on the far left or right and allows to switch between views of the side
   * bar.
   */
  ActivityBarBadgeForeground = 'activityBarBadge-foreground',
  /**
   * Background color for the remote indicator on the status bar.
   */
  StatusBarItemRemoteBackground = 'statusBarItem-remoteBackground',
  /**
   * Foreground color for the remote indicator on the status bar.
   */
  StatusBarItemRemoteForeground = 'statusBarItem-remoteForeground',
  /**
   * Background color for the remote badge in the extensions view.
   */
  ExtensionBadgeRemoteBackground = 'extensionBadge-remoteBackground',
  /**
   * Foreground color for the remote badge in the extensions view.
   */
  ExtensionBadgeRemoteForeground = 'extensionBadge-remoteForeground',
  /**
   * Side bar background color. The side bar is the container for views like
   * explorer and search.
   */
  SideBarBackground = 'sideBar-background',
  /**
   * Side bar foreground color. The side bar is the container for views like
   * explorer and search.
   */
  SideBarForeground = 'sideBar-foreground',
  /**
   * Side bar border color on the side separating to the editor. The side bar
   * is the container for views like explorer and search.
   */
  SideBarBorder = 'sideBar-border',
  /**
   * Side bar title foreground color. The side bar is the container for views
   * like explorer and search.
   */
  SideBarTitleForeground = 'sideBarTitle-foreground',
  /**
   * Drag and drop feedback color for the side bar sections. The color should
   * have transparency so that the side bar sections can still shine through.
   * The side bar is the container for views like explorer and search.
   */
  SideBarDropBackground = 'sideBar-dropBackground',
  /**
   * Side bar section header background color. The side bar is the container
   * for views like explorer and search.
   */
  SideBarSectionHeaderBackground = 'sideBarSectionHeader-background',
  /**
   * Side bar section header foreground color. The side bar is the container
   * for views like explorer and search.
   */
  SideBarSectionHeaderForeground = 'sideBarSectionHeader-foreground',
  /**
   * Side bar section header border color. The side bar is the container for
   * views like explorer and search.
   */
  SideBarSectionHeaderBorder = 'sideBarSectionHeader-border',
  /**
   * Title bar foreground when the window is active. Note that this color is
   * currently only supported on macOS.
   */
  TitleBarActiveForeground = 'titleBar-activeForeground',
  /**
   * Title bar foreground when the window is inactive. Note that this color is
   * currently only supported on macOS.
   */
  TitleBarInactiveForeground = 'titleBar-inactiveForeground',
  /**
   * Title bar background when the window is active. Note that this color is
   * currently only supported on macOS.
   */
  TitleBarActiveBackground = 'titleBar-activeBackground',
  /**
   * Title bar background when the window is inactive. Note that this color is
   * currently only supported on macOS.
   */
  TitleBarInactiveBackground = 'titleBar-inactiveBackground',
  /**
   * Title bar border color. Note that this color is currently only supported
   * on macOS.
   */
  TitleBarBorder = 'titleBar-border',
  /**
   * Foreground color of the selected menu item in the menubar.
   */
  MenubarSelectionForeground = 'menubar-selectionForeground',
  /**
   * Background color of the selected menu item in the menubar.
   */
  MenubarSelectionBackground = 'menubar-selectionBackground',
  /**
   * Border color of the selected menu item in the menubar.
   */
  MenubarSelectionBorder = 'menubar-selectionBorder',
  /**
   * Notifications center border color. Notifications slide in from the bottom
   * right of the window.
   */
  NotificationCenterBorder = 'notificationCenter-border',
  /**
   * Notification toast border color. Notifications slide in from the bottom
   * right of the window.
   */
  NotificationToastBorder = 'notificationToast-border',
  /**
   * Notifications foreground color. Notifications slide in from the bottom
   * right of the window.
   */
  NotificationsForeground = 'notifications-foreground',
  /**
   * Notifications background color. Notifications slide in from the bottom
   * right of the window.
   */
  NotificationsBackground = 'notifications-background',
  /**
   * Notification links foreground color. Notifications slide in from the
   * bottom right of the window.
   */
  NotificationLinkForeground = 'notificationLink-foreground',
  /**
   * Notifications center header foreground color. Notifications slide in from
   * the bottom right of the window.
   */
  NotificationCenterHeaderForeground = 'notificationCenterHeader-foreground',
  /**
   * Notifications center header background color. Notifications slide in from
   * the bottom right of the window.
   */
  NotificationCenterHeaderBackground = 'notificationCenterHeader-background',
  /**
   * Notifications border color separating from other notifications in the
   * notifications center. Notifications slide in from the bottom right of the
   * window.
   */
  NotificationsBorder = 'notifications-border',
  /**
   * The color used for the icon of error notifications. Notifications slide in
   * from the bottom right of the window.
   */
  NotificationsErrorIconForeground = 'notificationsErrorIcon-foreground',
  /**
   * The color used for the icon of warning notifications. Notifications slide
   * in from the bottom right of the window.
   */
  NotificationsWarningIconForeground = 'notificationsWarningIcon-foreground',
  /**
   * The color used for the icon of info notifications. Notifications slide in
   * from the bottom right of the window.
   */
  NotificationsInfoIconForeground = 'notificationsInfoIcon-foreground',
  /**
   * The color used for the border of the window when it is active. Only
   * supported in the desktop client when using the custom title bar.
   */
  WindowActiveBorder = 'window-activeBorder',
  /**
   * The color used for the border of the window when it is inactive. Only
   * supported in the desktop client when using the custom title bar.
   */
  WindowInactiveBorder = 'window-inactiveBorder',
  /**
   * Background color for the highlight of line at the cursor position.
   */
  EditorLineHighlightBackground = 'editor-lineHighlightBackground',
  /**
   * Background color for the border around the line at the cursor position.
   */
  EditorLineHighlightBorder = 'editor-lineHighlightBorder',
  /**
   * Background color of highlighted ranges, like by quick open and find
   * features. The color must not be opaque so as not to hide underlying
   * decorations.
   */
  EditorRangeHighlightBackground = 'editor-rangeHighlightBackground',
  /**
   * Background color of the border around highlighted ranges.
   */
  EditorRangeHighlightBorder = 'editor-rangeHighlightBorder',
  /**
   * Background color of highlighted symbol, like for go to definition or go
   * next/previous symbol. The color must not be opaque so as not to hide
   * underlying decorations.
   */
  EditorSymbolHighlightBackground = 'editor-symbolHighlightBackground',
  /**
   * Background color of the border around highlighted symbols.
   */
  EditorSymbolHighlightBorder = 'editor-symbolHighlightBorder',
  /**
   * Color of the editor cursor.
   */
  EditorCursorForeground = 'editorCursor-foreground',
  /**
   * The background color of the editor cursor. Allows customizing the color of
   * a character overlapped by a block cursor.
   */
  EditorCursorBackground = 'editorCursor-background',
  /**
   * Color of whitespace characters in the editor.
   */
  EditorWhitespaceForeground = 'editorWhitespace-foreground',
  /**
   * Color of the editor indentation guides.
   */
  EditorIndentGuideBackground = 'editorIndentGuide-background',
  /**
   * Color of the active editor indentation guides.
   */
  EditorIndentGuideActiveBackground = 'editorIndentGuide-activeBackground',
  /**
   * Color of editor line numbers.
   */
  EditorLineNumberForeground = 'editorLineNumber-foreground',
  /**
   * Color of editor active line number
   */
  EditorActiveLineNumberForeground = 'editorActiveLineNumber-foreground',
  /**
   * Color of editor active line number
   */
  EditorLineNumberActiveForeground = 'editorLineNumber-activeForeground',
  /**
   * Color of the editor rulers.
   */
  EditorRulerForeground = 'editorRuler-foreground',
  /**
   * Foreground color of editor CodeLens
   */
  EditorCodeLensForeground = 'editorCodeLens-foreground',
  /**
   * Background color behind matching brackets
   */
  EditorBracketMatchBackground = 'editorBracketMatch-background',
  /**
   * Color for matching brackets boxes
   */
  EditorBracketMatchBorder = 'editorBracketMatch-border',
  /**
   * Color of the overview ruler border.
   */
  EditorOverviewRulerBorder = 'editorOverviewRuler-border',
  /**
   * Background color of the editor overview ruler. Only used when the minimap
   * is enabled and placed on the right side of the editor.
   */
  EditorOverviewRulerBackground = 'editorOverviewRuler-background',
  /**
   * Background color of the editor gutter. The gutter contains the glyph
   * margins and the line numbers.
   */
  EditorGutterBackground = 'editorGutter-background',
  /**
   * Border color of unnecessary (unused) source code in the editor.
   */
  EditorUnnecessaryCodeBorder = 'editorUnnecessaryCode-border',
  /**
   * Opacity of unnecessary (unused) source code in the editor. For example,
   * "#000000c0" will render the code with 75% opacity. For high contrast
   * themes, use the  'editorUnnecessaryCode.border' theme color to underline
   * unnecessary code instead of fading it out.
   */
  EditorUnnecessaryCodeOpacity = 'editorUnnecessaryCode-opacity',
  /**
   * Overview ruler marker color for range highlights. The color must not be
   * opaque so as not to hide underlying decorations.
   */
  EditorOverviewRulerRangeHighlightForeground = 'editorOverviewRuler-rangeHighlightForeground',
  /**
   * Overview ruler marker color for errors.
   */
  EditorOverviewRulerErrorForeground = 'editorOverviewRuler-errorForeground',
  /**
   * Overview ruler marker color for warnings.
   */
  EditorOverviewRulerWarningForeground = 'editorOverviewRuler-warningForeground',
  /**
   * Overview ruler marker color for infos.
   */
  EditorOverviewRulerInfoForeground = 'editorOverviewRuler-infoForeground',
  /**
   * Overview ruler marker color for matching brackets.
   */
  EditorOverviewRulerBracketMatchForeground = 'editorOverviewRuler-bracketMatchForeground',
  /**
   * The foreground color for array symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconArrayForeground = 'symbolIcon-arrayForeground',
  /**
   * The foreground color for boolean symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconBooleanForeground = 'symbolIcon-booleanForeground',
  /**
   * The foreground color for class symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconClassForeground = 'symbolIcon-classForeground',
  /**
   * The foreground color for color symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconColorForeground = 'symbolIcon-colorForeground',
  /**
   * The foreground color for constant symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconConstantForeground = 'symbolIcon-constantForeground',
  /**
   * The foreground color for constructor symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconConstructorForeground = 'symbolIcon-constructorForeground',
  /**
   * The foreground color for enumerator symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconEnumeratorForeground = 'symbolIcon-enumeratorForeground',
  /**
   * The foreground color for enumerator member symbols. These symbols appear
   * in the outline, breadcrumb, and suggest widget.
   */
  SymbolIconEnumeratorMemberForeground = 'symbolIcon-enumeratorMemberForeground',
  /**
   * The foreground color for event symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconEventForeground = 'symbolIcon-eventForeground',
  /**
   * The foreground color for field symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconFieldForeground = 'symbolIcon-fieldForeground',
  /**
   * The foreground color for file symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconFileForeground = 'symbolIcon-fileForeground',
  /**
   * The foreground color for folder symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconFolderForeground = 'symbolIcon-folderForeground',
  /**
   * The foreground color for function symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconFunctionForeground = 'symbolIcon-functionForeground',
  /**
   * The foreground color for interface symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconInterfaceForeground = 'symbolIcon-interfaceForeground',
  /**
   * The foreground color for key symbols. These symbols appear in the outline,
   * breadcrumb, and suggest widget.
   */
  SymbolIconKeyForeground = 'symbolIcon-keyForeground',
  /**
   * The foreground color for keyword symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconKeywordForeground = 'symbolIcon-keywordForeground',
  /**
   * The foreground color for method symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconMethodForeground = 'symbolIcon-methodForeground',
  /**
   * The foreground color for module symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconModuleForeground = 'symbolIcon-moduleForeground',
  /**
   * The foreground color for namespace symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconNamespaceForeground = 'symbolIcon-namespaceForeground',
  /**
   * The foreground color for null symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconNullForeground = 'symbolIcon-nullForeground',
  /**
   * The foreground color for number symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconNumberForeground = 'symbolIcon-numberForeground',
  /**
   * The foreground color for object symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconObjectForeground = 'symbolIcon-objectForeground',
  /**
   * The foreground color for operator symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconOperatorForeground = 'symbolIcon-operatorForeground',
  /**
   * The foreground color for package symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconPackageForeground = 'symbolIcon-packageForeground',
  /**
   * The foreground color for property symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconPropertyForeground = 'symbolIcon-propertyForeground',
  /**
   * The foreground color for reference symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconReferenceForeground = 'symbolIcon-referenceForeground',
  /**
   * The foreground color for snippet symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconSnippetForeground = 'symbolIcon-snippetForeground',
  /**
   * The foreground color for string symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconStringForeground = 'symbolIcon-stringForeground',
  /**
   * The foreground color for struct symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconStructForeground = 'symbolIcon-structForeground',
  /**
   * The foreground color for text symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconTextForeground = 'symbolIcon-textForeground',
  /**
   * The foreground color for type parameter symbols. These symbols appear in
   * the outline, breadcrumb, and suggest widget.
   */
  SymbolIconTypeParameterForeground = 'symbolIcon-typeParameterForeground',
  /**
   * The foreground color for unit symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconUnitForeground = 'symbolIcon-unitForeground',
  /**
   * The foreground color for variable symbols. These symbols appear in the
   * outline, breadcrumb, and suggest widget.
   */
  SymbolIconVariableForeground = 'symbolIcon-variableForeground',
  /**
   * Background color behind folded ranges. The color must not be opaque so as
   * not to hide underlying decorations.
   */
  EditorFoldBackground = 'editor-foldBackground',
  /**
   * Color of the folding control in the editor gutter.
   */
  EditorGutterFoldingControlForeground = 'editorGutter-foldingControlForeground',
  /**
   * Editor marker navigation widget error color.
   */
  EditorMarkerNavigationErrorBackground = 'editorMarkerNavigationError-background',
  /**
   * Editor marker navigation widget warning color.
   */
  EditorMarkerNavigationWarningBackground = 'editorMarkerNavigationWarning-background',
  /**
   * Editor marker navigation widget info color.
   */
  EditorMarkerNavigationInfoBackground = 'editorMarkerNavigationInfo-background',
  /**
   * Editor marker navigation widget background.
   */
  EditorMarkerNavigationBackground = 'editorMarkerNavigation-background',
  /**
   * Background color of the peek view title area.
   */
  PeekViewTitleBackground = 'peekViewTitle-background',
  /**
   * Color of the peek view title.
   */
  PeekViewTitleLabelForeground = 'peekViewTitleLabel-foreground',
  /**
   * Color of the peek view title info.
   */
  PeekViewTitleDescriptionForeground = 'peekViewTitleDescription-foreground',
  /**
   * Color of the peek view borders and arrow.
   */
  PeekViewBorder = 'peekView-border',
  /**
   * Background color of the peek view result list.
   */
  PeekViewResultBackground = 'peekViewResult-background',
  /**
   * Foreground color for line nodes in the peek view result list.
   */
  PeekViewResultLineForeground = 'peekViewResult-lineForeground',
  /**
   * Foreground color for file nodes in the peek view result list.
   */
  PeekViewResultFileForeground = 'peekViewResult-fileForeground',
  /**
   * Background color of the selected entry in the peek view result list.
   */
  PeekViewResultSelectionBackground = 'peekViewResult-selectionBackground',
  /**
   * Foreground color of the selected entry in the peek view result list.
   */
  PeekViewResultSelectionForeground = 'peekViewResult-selectionForeground',
  /**
   * Background color of the peek view editor.
   */
  PeekViewEditorBackground = 'peekViewEditor-background',
  /**
   * Background color of the gutter in the peek view editor.
   */
  PeekViewEditorGutterBackground = 'peekViewEditorGutter-background',
  /**
   * Match highlight color in the peek view result list.
   */
  PeekViewResultMatchHighlightBackground = 'peekViewResult-matchHighlightBackground',
  /**
   * Match highlight color in the peek view editor.
   */
  PeekViewEditorMatchHighlightBackground = 'peekViewEditor-matchHighlightBackground',
  /**
   * Match highlight border in the peek view editor.
   */
  PeekViewEditorMatchHighlightBorder = 'peekViewEditor-matchHighlightBorder',
  /**
   * Background color of the suggest widget.
   */
  EditorSuggestWidgetBackground = 'editorSuggestWidget-background',
  /**
   * Border color of the suggest widget.
   */
  EditorSuggestWidgetBorder = 'editorSuggestWidget-border',
  /**
   * Foreground color of the suggest widget.
   */
  EditorSuggestWidgetForeground = 'editorSuggestWidget-foreground',
  /**
   * Background color of the selected entry in the suggest widget.
   */
  EditorSuggestWidgetSelectedBackground = 'editorSuggestWidget-selectedBackground',
  /**
   * Color of the match highlights in the suggest widget.
   */
  EditorSuggestWidgetHighlightForeground = 'editorSuggestWidget-highlightForeground',
  /**
   * Background color of a symbol during read-access, like reading a variable.
   * The color must not be opaque so as not to hide underlying decorations.
   */
  EditorWordHighlightBackground = 'editor-wordHighlightBackground',
  /**
   * Background color of a symbol during write-access, like writing to a
   * variable. The color must not be opaque so as not to hide underlying
   * decorations.
   */
  EditorWordHighlightStrongBackground = 'editor-wordHighlightStrongBackground',
  /**
   * Border color of a symbol during read-access, like reading a variable.
   */
  EditorWordHighlightBorder = 'editor-wordHighlightBorder',
  /**
   * Border color of a symbol during write-access, like writing to a variable.
   */
  EditorWordHighlightStrongBorder = 'editor-wordHighlightStrongBorder',
  /**
   * Overview ruler marker color for symbol highlights. The color must not be
   * opaque so as not to hide underlying decorations.
   */
  EditorOverviewRulerWordHighlightForeground = 'editorOverviewRuler-wordHighlightForeground',
  /**
   * Overview ruler marker color for write-access symbol highlights. The color
   * must not be opaque so as not to hide underlying decorations.
   */
  EditorOverviewRulerWordHighlightStrongForeground = 'editorOverviewRuler-wordHighlightStrongForeground',
  /**
   * Overall foreground color. This color is only used if not overridden by a
   * component.
   */
  Foreground = 'foreground',
  /**
   * Overall foreground color for error messages. This color is only used if
   * not overridden by a component.
   */
  ErrorForeground = 'errorForeground',
  /**
   * Foreground color for description text providing additional information,
   * for example for a label.
   */
  DescriptionForeground = 'descriptionForeground',
  /**
   * The default color for icons in the workbench.
   */
  IconForeground = 'icon-foreground',
  /**
   * Overall border color for focused elements. This color is only used if not
   * overridden by a component.
   */
  FocusBorder = 'focusBorder',
  /**
   * An extra border around elements to separate them from others for greater
   * contrast.
   */
  ContrastBorder = 'contrastBorder',
  /**
   * An extra border around active elements to separate them from others for
   * greater contrast.
   */
  ContrastActiveBorder = 'contrastActiveBorder',
  /**
   * The background color of text selections in the workbench (e.g. for input
   * fields or text areas). Note that this does not apply to selections within
   * the editor.
   */
  SelectionBackground = 'selection-background',
  /**
   * Color for text separators.
   */
  TextSeparatorForeground = 'textSeparator-foreground',
  /**
   * Foreground color for links in text.
   */
  TextLinkForeground = 'textLink-foreground',
  /**
   * Foreground color for links in text when clicked on and on mouse hover.
   */
  TextLinkActiveForeground = 'textLink-activeForeground',
  /**
   * Foreground color for preformatted text segments.
   */
  TextPreformatForeground = 'textPreformat-foreground',
  /**
   * Background color for block quotes in text.
   */
  TextBlockQuoteBackground = 'textBlockQuote-background',
  /**
   * Border color for block quotes in text.
   */
  TextBlockQuoteBorder = 'textBlockQuote-border',
  /**
   * Background color for code blocks in text.
   */
  TextCodeBlockBackground = 'textCodeBlock-background',
  /**
   * Shadow color of widgets such as find/replace inside the editor.
   */
  WidgetShadow = 'widget-shadow',
  /**
   * Input box background.
   */
  InputBackground = 'input-background',
  /**
   * Input box foreground.
   */
  InputForeground = 'input-foreground',
  /**
   * Input box border.
   */
  InputBorder = 'input-border',
  /**
   * Border color of activated options in input fields.
   */
  InputOptionActiveBorder = 'inputOption-activeBorder',
  /**
   * Background color of activated options in input fields.
   */
  InputOptionActiveBackground = 'inputOption-activeBackground',
  /**
   * Input box foreground color for placeholder text.
   */
  InputPlaceholderForeground = 'input-placeholderForeground',
  /**
   * Input validation background color for information severity.
   */
  InputValidationInfoBackground = 'inputValidation-infoBackground',
  /**
   * Input validation foreground color for information severity.
   */
  InputValidationInfoForeground = 'inputValidation-infoForeground',
  /**
   * Input validation border color for information severity.
   */
  InputValidationInfoBorder = 'inputValidation-infoBorder',
  /**
   * Input validation background color for warning severity.
   */
  InputValidationWarningBackground = 'inputValidation-warningBackground',
  /**
   * Input validation foreground color for warning severity.
   */
  InputValidationWarningForeground = 'inputValidation-warningForeground',
  /**
   * Input validation border color for warning severity.
   */
  InputValidationWarningBorder = 'inputValidation-warningBorder',
  /**
   * Input validation background color for error severity.
   */
  InputValidationErrorBackground = 'inputValidation-errorBackground',
  /**
   * Input validation foreground color for error severity.
   */
  InputValidationErrorForeground = 'inputValidation-errorForeground',
  /**
   * Input validation border color for error severity.
   */
  InputValidationErrorBorder = 'inputValidation-errorBorder',
  /**
   * Dropdown background.
   */
  DropdownBackground = 'dropdown-background',
  /**
   * Dropdown list background.
   */
  DropdownListBackground = 'dropdown-listBackground',
  /**
   * Dropdown foreground.
   */
  DropdownForeground = 'dropdown-foreground',
  /**
   * Dropdown border.
   */
  DropdownBorder = 'dropdown-border',
  /**
   * Background color of checkbox widget.
   */
  CheckboxBackground = 'checkbox-background',
  /**
   * Foreground color of checkbox widget.
   */
  CheckboxForeground = 'checkbox-foreground',
  /**
   * Border color of checkbox widget.
   */
  CheckboxBorder = 'checkbox-border',
  /**
   * Button foreground color.
   */
  ButtonForeground = 'button-foreground',
  /**
   * Button background color.
   */
  ButtonBackground = 'button-background',
  /**
   * Button background color when hovering.
   */
  ButtonHoverBackground = 'button-hoverBackground',
  /**
   * Badge background color. Badges are small information labels, e.g. for
   * search results count.
   */
  BadgeBackground = 'badge-background',
  /**
   * Badge foreground color. Badges are small information labels, e.g. for
   * search results count.
   */
  BadgeForeground = 'badge-foreground',
  /**
   * Scrollbar shadow to indicate that the view is scrolled.
   */
  ScrollbarShadow = 'scrollbar-shadow',
  /**
   * Scrollbar slider background color.
   */
  ScrollbarSliderBackground = 'scrollbarSlider-background',
  /**
   * Scrollbar slider background color when hovering.
   */
  ScrollbarSliderHoverBackground = 'scrollbarSlider-hoverBackground',
  /**
   * Scrollbar slider background color when clicked on.
   */
  ScrollbarSliderActiveBackground = 'scrollbarSlider-activeBackground',
  /**
   * Background color of the progress bar that can show for long running
   * operations.
   */
  ProgressBarBackground = 'progressBar-background',
  /**
   * Foreground color of error squigglies in the editor.
   */
  EditorErrorForeground = 'editorError-foreground',
  /**
   * Border color of error boxes in the editor.
   */
  EditorErrorBorder = 'editorError-border',
  /**
   * Foreground color of warning squigglies in the editor.
   */
  EditorWarningForeground = 'editorWarning-foreground',
  /**
   * Border color of warning boxes in the editor.
   */
  EditorWarningBorder = 'editorWarning-border',
  /**
   * Foreground color of info squigglies in the editor.
   */
  EditorInfoForeground = 'editorInfo-foreground',
  /**
   * Border color of info boxes in the editor.
   */
  EditorInfoBorder = 'editorInfo-border',
  /**
   * Foreground color of hint squigglies in the editor.
   */
  EditorHintForeground = 'editorHint-foreground',
  /**
   * Border color of hint boxes in the editor.
   */
  EditorHintBorder = 'editorHint-border',
  /**
   * Editor background color.
   */
  EditorBackground = 'editor-background',
  /**
   * Editor default foreground color.
   */
  EditorForeground = 'editor-foreground',
  /**
   * Background color of editor widgets, such as find/replace.
   */
  EditorWidgetBackground = 'editorWidget-background',
  /**
   * Foreground color of editor widgets, such as find/replace.
   */
  EditorWidgetForeground = 'editorWidget-foreground',
  /**
   * Border color of editor widgets. The color is only used if the widget
   * chooses to have a border and if the color is not overridden by a widget.
   */
  EditorWidgetBorder = 'editorWidget-border',
  /**
   * Border color of the resize bar of editor widgets. The color is only used
   * if the widget chooses to have a resize border and if the color is not
   * overridden by a widget.
   */
  EditorWidgetResizeBorder = 'editorWidget-resizeBorder',
  /**
   * Quick picker background color. The quick picker widget is the container
   * for pickers like the command palette.
   */
  QuickInputBackground = 'quickInput-background',
  /**
   * Quick picker foreground color. The quick picker widget is the container
   * for pickers like the command palette.
   */
  QuickInputForeground = 'quickInput-foreground',
  /**
   * Quick picker title background color. The quick picker widget is the
   * container for pickers like the command palette.
   */
  QuickInputTitleBackground = 'quickInputTitle-background',
  /**
   * Quick picker color for grouping labels.
   */
  PickerGroupForeground = 'pickerGroup-foreground',
  /**
   * Quick picker color for grouping borders.
   */
  PickerGroupBorder = 'pickerGroup-border',
  /**
   * Color of the editor selection.
   */
  EditorSelectionBackground = 'editor-selectionBackground',
  /**
   * Color of the selected text for high contrast.
   */
  EditorSelectionForeground = 'editor-selectionForeground',
  /**
   * Color of the selection in an inactive editor. The color must not be opaque
   * so as not to hide underlying decorations.
   */
  EditorInactiveSelectionBackground = 'editor-inactiveSelectionBackground',
  /**
   * Color for regions with the same content as the selection. The color must
   * not be opaque so as not to hide underlying decorations.
   */
  EditorSelectionHighlightBackground = 'editor-selectionHighlightBackground',
  /**
   * Border color for regions with the same content as the selection.
   */
  EditorSelectionHighlightBorder = 'editor-selectionHighlightBorder',
  /**
   * Color of the current search match.
   */
  EditorFindMatchBackground = 'editor-findMatchBackground',
  /**
   * Color of the other search matches. The color must not be opaque so as not
   * to hide underlying decorations.
   */
  EditorFindMatchHighlightBackground = 'editor-findMatchHighlightBackground',
  /**
   * Color of the range limiting the search. The color must not be opaque so as
   * not to hide underlying decorations.
   */
  EditorFindRangeHighlightBackground = 'editor-findRangeHighlightBackground',
  /**
   * Border color of the current search match.
   */
  EditorFindMatchBorder = 'editor-findMatchBorder',
  /**
   * Border color of the other search matches.
   */
  EditorFindMatchHighlightBorder = 'editor-findMatchHighlightBorder',
  /**
   * Border color of the range limiting the search. The color must not be
   * opaque so as not to hide underlying decorations.
   */
  EditorFindRangeHighlightBorder = 'editor-findRangeHighlightBorder',
  /**
   * Color of the Search Editor query matches.
   */
  SearchEditorFindMatchBackground = 'searchEditor-findMatchBackground',
  /**
   * Border color of the Search Editor query matches.
   */
  SearchEditorFindMatchBorder = 'searchEditor-findMatchBorder',
  /**
   * Highlight below the word for which a hover is shown. The color must not be
   * opaque so as not to hide underlying decorations.
   */
  EditorHoverHighlightBackground = 'editor-hoverHighlightBackground',
  /**
   * Background color of the editor hover.
   */
  EditorHoverWidgetBackground = 'editorHoverWidget-background',
  /**
   * Foreground color of the editor hover.
   */
  EditorHoverWidgetForeground = 'editorHoverWidget-foreground',
  /**
   * Border color of the editor hover.
   */
  EditorHoverWidgetBorder = 'editorHoverWidget-border',
  /**
   * Background color of the editor hover status bar.
   */
  EditorHoverWidgetStatusBarBackground = 'editorHoverWidget-statusBarBackground',
  /**
   * Color of active links.
   */
  EditorLinkActiveForeground = 'editorLink-activeForeground',
  /**
   * The color used for the lightbulb actions icon.
   */
  EditorLightBulbForeground = 'editorLightBulb-foreground',
  /**
   * The color used for the lightbulb auto fix actions icon.
   */
  EditorLightBulbAutoFixForeground = 'editorLightBulbAutoFix-foreground',
  /**
   * Background color for text that got inserted. The color must not be opaque
   * so as not to hide underlying decorations.
   */
  DiffEditorInsertedTextBackground = 'diffEditor-insertedTextBackground',
  /**
   * Background color for text that got removed. The color must not be opaque
   * so as not to hide underlying decorations.
   */
  DiffEditorRemovedTextBackground = 'diffEditor-removedTextBackground',
  /**
   * Outline color for the text that got inserted.
   */
  DiffEditorInsertedTextBorder = 'diffEditor-insertedTextBorder',
  /**
   * Outline color for text that got removed.
   */
  DiffEditorRemovedTextBorder = 'diffEditor-removedTextBorder',
  /**
   * Border color between the two text editors.
   */
  DiffEditorBorder = 'diffEditor-border',
  /**
   * Color of the diff editor's diagonal fill. The diagonal fill is used in
   * side-by-side diff views.
   */
  DiffEditorDiagonalFill = 'diffEditor-diagonalFill',
  /**
   * List/Tree background color for the focused item when the list/tree is
   * active. An active list/tree has keyboard focus, an inactive does not.
   */
  ListFocusBackground = 'list-focusBackground',
  /**
   * List/Tree foreground color for the focused item when the list/tree is
   * active. An active list/tree has keyboard focus, an inactive does not.
   */
  ListFocusForeground = 'list-focusForeground',
  /**
   * List/Tree background color for the selected item when the list/tree is
   * active. An active list/tree has keyboard focus, an inactive does not.
   */
  ListActiveSelectionBackground = 'list-activeSelectionBackground',
  /**
   * List/Tree foreground color for the selected item when the list/tree is
   * active. An active list/tree has keyboard focus, an inactive does not.
   */
  ListActiveSelectionForeground = 'list-activeSelectionForeground',
  /**
   * List/Tree background color for the selected item when the list/tree is
   * inactive. An active list/tree has keyboard focus, an inactive does not.
   */
  ListInactiveSelectionBackground = 'list-inactiveSelectionBackground',
  /**
   * List/Tree foreground color for the selected item when the list/tree is
   * inactive. An active list/tree has keyboard focus, an inactive does not.
   */
  ListInactiveSelectionForeground = 'list-inactiveSelectionForeground',
  /**
   * List/Tree background color for the focused item when the list/tree is
   * inactive. An active list/tree has keyboard focus, an inactive does not.
   */
  ListInactiveFocusBackground = 'list-inactiveFocusBackground',
  /**
   * List/Tree background when hovering over items using the mouse.
   */
  ListHoverBackground = 'list-hoverBackground',
  /**
   * List/Tree foreground when hovering over items using the mouse.
   */
  ListHoverForeground = 'list-hoverForeground',
  /**
   * List/Tree drag and drop background when moving items around using the
   * mouse.
   */
  ListDropBackground = 'list-dropBackground',
  /**
   * List/Tree foreground color of the match highlights when searching inside
   * the list/tree.
   */
  ListHighlightForeground = 'list-highlightForeground',
  /**
   * List/Tree foreground color for invalid items, for example an unresolved
   * root in explorer.
   */
  ListInvalidItemForeground = 'list-invalidItemForeground',
  /**
   * Foreground color of list items containing errors.
   */
  ListErrorForeground = 'list-errorForeground',
  /**
   * Foreground color of list items containing warnings.
   */
  ListWarningForeground = 'list-warningForeground',
  /**
   * Background color of the type filter widget in lists and trees.
   */
  ListFilterWidgetBackground = 'listFilterWidget-background',
  /**
   * Outline color of the type filter widget in lists and trees.
   */
  ListFilterWidgetOutline = 'listFilterWidget-outline',
  /**
   * Outline color of the type filter widget in lists and trees, when there are
   * no matches.
   */
  ListFilterWidgetNoMatchesOutline = 'listFilterWidget-noMatchesOutline',
  /**
   * Background color of the filtered match.
   */
  ListFilterMatchBackground = 'list-filterMatchBackground',
  /**
   * Border color of the filtered match.
   */
  ListFilterMatchBorder = 'list-filterMatchBorder',
  /**
   * Tree stroke color for the indentation guides.
   */
  TreeIndentGuidesStroke = 'tree-indentGuidesStroke',
  /**
   * List/Tree foreground color for items that are deemphasized.
   */
  ListDeemphasizedForeground = 'list-deemphasizedForeground',
  /**
   * Border color of menus.
   */
  MenuBorder = 'menu-border',
  /**
   * Foreground color of menu items.
   */
  MenuForeground = 'menu-foreground',
  /**
   * Background color of menu items.
   */
  MenuBackground = 'menu-background',
  /**
   * Foreground color of the selected menu item in menus.
   */
  MenuSelectionForeground = 'menu-selectionForeground',
  /**
   * Background color of the selected menu item in menus.
   */
  MenuSelectionBackground = 'menu-selectionBackground',
  /**
   * Border color of the selected menu item in menus.
   */
  MenuSelectionBorder = 'menu-selectionBorder',
  /**
   * Color of a separator menu item in menus.
   */
  MenuSeparatorBackground = 'menu-separatorBackground',
  /**
   * Highlight background color of a snippet tabstop.
   */
  EditorSnippetTabstopHighlightBackground = 'editor-snippetTabstopHighlightBackground',
  /**
   * Highlight border color of a snippet tabstop.
   */
  EditorSnippetTabstopHighlightBorder = 'editor-snippetTabstopHighlightBorder',
  /**
   * Highlight background color of the final tabstop of a snippet.
   */
  EditorSnippetFinalTabstopHighlightBackground = 'editor-snippetFinalTabstopHighlightBackground',
  /**
   * Highlight border color of the final stabstop of a snippet.
   */
  EditorSnippetFinalTabstopHighlightBorder = 'editor-snippetFinalTabstopHighlightBorder',
  /**
   * Color of focused breadcrumb items.
   */
  BreadcrumbForeground = 'breadcrumb-foreground',
  /**
   * Background color of breadcrumb items.
   */
  BreadcrumbBackground = 'breadcrumb-background',
  /**
   * Color of focused breadcrumb items.
   */
  BreadcrumbFocusForeground = 'breadcrumb-focusForeground',
  /**
   * Color of selected breadcrumb items.
   */
  BreadcrumbActiveSelectionForeground = 'breadcrumb-activeSelectionForeground',
  /**
   * Background color of breadcrumb item picker.
   */
  BreadcrumbPickerBackground = 'breadcrumbPicker-background',
  /**
   * Current header background in inline merge-conflicts. The color must not be
   * opaque so as not to hide underlying decorations.
   */
  MergeCurrentHeaderBackground = 'merge-currentHeaderBackground',
  /**
   * Current content background in inline merge-conflicts. The color must not
   * be opaque so as not to hide underlying decorations.
   */
  MergeCurrentContentBackground = 'merge-currentContentBackground',
  /**
   * Incoming header background in inline merge-conflicts. The color must not
   * be opaque so as not to hide underlying decorations.
   */
  MergeIncomingHeaderBackground = 'merge-incomingHeaderBackground',
  /**
   * Incoming content background in inline merge-conflicts. The color must not
   * be opaque so as not to hide underlying decorations.
   */
  MergeIncomingContentBackground = 'merge-incomingContentBackground',
  /**
   * Common ancestor header background in inline merge-conflicts. The color
   * must not be opaque so as not to hide underlying decorations.
   */
  MergeCommonHeaderBackground = 'merge-commonHeaderBackground',
  /**
   * Common ancestor content background in inline merge-conflicts. The color
   * must not be opaque so as not to hide underlying decorations.
   */
  MergeCommonContentBackground = 'merge-commonContentBackground',
  /**
   * Border color on headers and the splitter in inline merge-conflicts.
   */
  MergeBorder = 'merge-border',
  /**
   * Current overview ruler foreground for inline merge-conflicts.
   */
  EditorOverviewRulerCurrentContentForeground = 'editorOverviewRuler-currentContentForeground',
  /**
   * Incoming overview ruler foreground for inline merge-conflicts.
   */
  EditorOverviewRulerIncomingContentForeground = 'editorOverviewRuler-incomingContentForeground',
  /**
   * Common ancestor overview ruler foreground for inline merge-conflicts.
   */
  EditorOverviewRulerCommonContentForeground = 'editorOverviewRuler-commonContentForeground',
  /**
   * Overview ruler marker color for find matches. The color must not be opaque
   * so as not to hide underlying decorations.
   */
  EditorOverviewRulerFindMatchForeground = 'editorOverviewRuler-findMatchForeground',
  /**
   * Overview ruler marker color for selection highlights. The color must not
   * be opaque so as not to hide underlying decorations.
   */
  EditorOverviewRulerSelectionHighlightForeground = 'editorOverviewRuler-selectionHighlightForeground',
  /**
   * Minimap marker color for find matches.
   */
  MinimapFindMatchHighlight = 'minimap-findMatchHighlight',
  /**
   * Minimap marker color for the editor selection.
   */
  MinimapSelectionHighlight = 'minimap-selectionHighlight',
  /**
   * Minimap marker color for errors.
   */
  MinimapErrorHighlight = 'minimap-errorHighlight',
  /**
   * Minimap marker color for warnings.
   */
  MinimapWarningHighlight = 'minimap-warningHighlight',
  /**
   * Minimap background color.
   */
  MinimapBackground = 'minimap-background',
  /**
   * Minimap slider background color.
   */
  MinimapSliderBackground = 'minimapSlider-background',
  /**
   * Minimap slider background color when hovering.
   */
  MinimapSliderHoverBackground = 'minimapSlider-hoverBackground',
  /**
   * Minimap slider background color when clicked on.
   */
  MinimapSliderActiveBackground = 'minimapSlider-activeBackground',
  /**
   * The color used for the problems error icon.
   */
  ProblemsErrorIconForeground = 'problemsErrorIcon-foreground',
  /**
   * The color used for the problems warning icon.
   */
  ProblemsWarningIconForeground = 'problemsWarningIcon-foreground',
  /**
   * The color used for the problems info icon.
   */
  ProblemsInfoIconForeground = 'problemsInfoIcon-foreground',
  /**
   * Editor gutter decoration color for commenting ranges.
   */
  EditorGutterCommentRangeForeground = 'editorGutter-commentRangeForeground',
  /**
   * Icon color for breakpoints.
   */
  DebugIconBreakpointForeground = 'debugIcon-breakpointForeground',
  /**
   * Icon color for disabled breakpoints.
   */
  DebugIconBreakpointDisabledForeground = 'debugIcon-breakpointDisabledForeground',
  /**
   * Icon color for unverified breakpoints.
   */
  DebugIconBreakpointUnverifiedForeground = 'debugIcon-breakpointUnverifiedForeground',
  /**
   * Icon color for the current breakpoint stack frame.
   */
  DebugIconBreakpointCurrentStackframeForeground = 'debugIcon-breakpointCurrentStackframeForeground',
  /**
   * Icon color for all breakpoint stack frames.
   */
  DebugIconBreakpointStackframeForeground = 'debugIcon-breakpointStackframeForeground',
  /**
   * Background color for the highlight of line at the top stack frame position.
   */
  EditorStackFrameHighlightBackground = 'editor-stackFrameHighlightBackground',
  /**
   * Background color for the highlight of line at focused stack frame position.
   */
  EditorFocusedStackFrameHighlightBackground = 'editor-focusedStackFrameHighlightBackground',
  /**
   * Foreground color for the token names shown in the debug views (ie. the
   * Variables or Watch view).
   */
  DebugTokenExpressionName = 'debugTokenExpression-name',
  /**
   * Foreground color for the token values shown in the debug views (ie. the
   * Variables or Watch view).
   */
  DebugTokenExpressionValue = 'debugTokenExpression-value',
  /**
   * Foreground color for strings in the debug views (ie. the Variables or
   * Watch view).
   */
  DebugTokenExpressionString = 'debugTokenExpression-string',
  /**
   * Foreground color for booleans in the debug views (ie. the Variables or
   * Watch view).
   */
  DebugTokenExpressionBoolean = 'debugTokenExpression-boolean',
  /**
   * Foreground color for numbers in the debug views (ie. the Variables or
   * Watch view).
   */
  DebugTokenExpressionNumber = 'debugTokenExpression-number',
  /**
   * Foreground color for expression errors in the debug views (ie. the
   * Variables or Watch view) and for error logs shown in the debug console.
   */
  DebugTokenExpressionError = 'debugTokenExpression-error',
  /**
   * Foreground color for a label shown in the CALL STACK view when the
   * debugger breaks on an exception.
   */
  DebugViewExceptionLabelForeground = 'debugView-exceptionLabelForeground',
  /**
   * Background color for a label shown in the CALL STACK view when the
   * debugger breaks on an exception.
   */
  DebugViewExceptionLabelBackground = 'debugView-exceptionLabelBackground',
  /**
   * Foreground color for a label in the CALL STACK view showing the current
   * session's or thread's state.
   */
  DebugViewStateLabelForeground = 'debugView-stateLabelForeground',
  /**
   * Background color for a label in the CALL STACK view showing the current
   * session's or thread's state.
   */
  DebugViewStateLabelBackground = 'debugView-stateLabelBackground',
  /**
   * Color used to highlight value changes in the debug views (ie. in the
   * Variables view).
   */
  DebugViewValueChangedHighlight = 'debugView-valueChangedHighlight',
  /**
   * Debug toolbar background color.
   */
  DebugToolBarBackground = 'debugToolBar-background',
  /**
   * Debug toolbar border color.
   */
  DebugToolBarBorder = 'debugToolBar-border',
  /**
   * Debug toolbar icon for start debugging.
   */
  DebugIconStartForeground = 'debugIcon-startForeground',
  /**
   * Debug toolbar icon for pause.
   */
  DebugIconPauseForeground = 'debugIcon-pauseForeground',
  /**
   * Debug toolbar icon for stop.
   */
  DebugIconStopForeground = 'debugIcon-stopForeground',
  /**
   * Debug toolbar icon for disconnect.
   */
  DebugIconDisconnectForeground = 'debugIcon-disconnectForeground',
  /**
   * Debug toolbar icon for restart.
   */
  DebugIconRestartForeground = 'debugIcon-restartForeground',
  /**
   * Debug toolbar icon for step over.
   */
  DebugIconStepOverForeground = 'debugIcon-stepOverForeground',
  /**
   * Debug toolbar icon for step into.
   */
  DebugIconStepIntoForeground = 'debugIcon-stepIntoForeground',
  /**
   * Debug toolbar icon for step over.
   */
  DebugIconStepOutForeground = 'debugIcon-stepOutForeground',
  /**
   * Debug toolbar icon for continue.
   */
  DebugIconContinueForeground = 'debugIcon-continueForeground',
  /**
   * Debug toolbar icon for step back.
   */
  DebugIconStepBackForeground = 'debugIcon-stepBackForeground',
  /**
   * Exception widget border color.
   */
  DebugExceptionWidgetBorder = 'debugExceptionWidget-border',
  /**
   * Exception widget background color.
   */
  DebugExceptionWidgetBackground = 'debugExceptionWidget-background',
  /**
   * Status bar background color when a program is being debugged. The status
   * bar is shown in the bottom of the window
   */
  StatusBarDebuggingBackground = 'statusBar-debuggingBackground',
  /**
   * Status bar foreground color when a program is being debugged. The status
   * bar is shown in the bottom of the window
   */
  StatusBarDebuggingForeground = 'statusBar-debuggingForeground',
  /**
   * Status bar border color separating to the sidebar and editor when a
   * program is being debugged. The status bar is shown in the bottom of the
   * window
   */
  StatusBarDebuggingBorder = 'statusBar-debuggingBorder',
  /**
   * Button background color for actions extension that stand out (e.g. install
   * button).
   */
  ExtensionButtonProminentBackground = 'extensionButton-prominentBackground',
  /**
   * Button foreground color for actions extension that stand out (e.g. install
   * button).
   */
  ExtensionButtonProminentForeground = 'extensionButton-prominentForeground',
  /**
   * Button background hover color for actions extension that stand out (e.g.
   * install button).
   */
  ExtensionButtonProminentHoverBackground = 'extensionButton-prominentHoverBackground',
  /**
   * The color of the focused notebook cell indicator.
   */
  NotebookFocusedCellIndicator = 'notebook-focusedCellIndicator',
  /**
   * The Color of the notebook output container background.
   */
  NotebookOutputContainerBackgroundColor = 'notebook-outputContainerBackgroundColor',
  /**
   * The color of seperator in Cell bottom toolbar
   */
  NotebookCellToolbarSeperator = 'notebook-cellToolbarSeperator',
  /**
   * The foreground color for a section header or active title.
   */
  SettingsHeaderForeground = 'settings-headerForeground',
  /**
   * The color of the modified setting indicator.
   */
  SettingsModifiedItemIndicator = 'settings-modifiedItemIndicator',
  /**
   * Settings editor dropdown background.
   */
  SettingsDropdownBackground = 'settings-dropdownBackground',
  /**
   * Settings editor dropdown foreground.
   */
  SettingsDropdownForeground = 'settings-dropdownForeground',
  /**
   * Settings editor dropdown border.
   */
  SettingsDropdownBorder = 'settings-dropdownBorder',
  /**
   * Settings editor dropdown list border. This surrounds the options and
   * separates the options from the description.
   */
  SettingsDropdownListBorder = 'settings-dropdownListBorder',
  /**
   * Settings editor checkbox background.
   */
  SettingsCheckboxBackground = 'settings-checkboxBackground',
  /**
   * Settings editor checkbox foreground.
   */
  SettingsCheckboxForeground = 'settings-checkboxForeground',
  /**
   * Settings editor checkbox border.
   */
  SettingsCheckboxBorder = 'settings-checkboxBorder',
  /**
   * Settings editor text input box background.
   */
  SettingsTextInputBackground = 'settings-textInputBackground',
  /**
   * Settings editor text input box foreground.
   */
  SettingsTextInputForeground = 'settings-textInputForeground',
  /**
   * Settings editor text input box border.
   */
  SettingsTextInputBorder = 'settings-textInputBorder',
  /**
   * Settings editor number input box background.
   */
  SettingsNumberInputBackground = 'settings-numberInputBackground',
  /**
   * Settings editor number input box foreground.
   */
  SettingsNumberInputForeground = 'settings-numberInputForeground',
  /**
   * Settings editor number input box border.
   */
  SettingsNumberInputBorder = 'settings-numberInputBorder',
  /**
   * Editor gutter background color for lines that are modified.
   */
  EditorGutterModifiedBackground = 'editorGutter-modifiedBackground',
  /**
   * Editor gutter background color for lines that are added.
   */
  EditorGutterAddedBackground = 'editorGutter-addedBackground',
  /**
   * Editor gutter background color for lines that are deleted.
   */
  EditorGutterDeletedBackground = 'editorGutter-deletedBackground',
  /**
   * Minimap gutter background color for lines that are modified.
   */
  MinimapGutterModifiedBackground = 'minimapGutter-modifiedBackground',
  /**
   * Minimap gutter background color for lines that are added.
   */
  MinimapGutterAddedBackground = 'minimapGutter-addedBackground',
  /**
   * Minimap gutter background color for lines that are deleted.
   */
  MinimapGutterDeletedBackground = 'minimapGutter-deletedBackground',
  /**
   * Overview ruler marker color for modified content.
   */
  EditorOverviewRulerModifiedForeground = 'editorOverviewRuler-modifiedForeground',
  /**
   * Overview ruler marker color for added content.
   */
  EditorOverviewRulerAddedForeground = 'editorOverviewRuler-addedForeground',
  /**
   * Overview ruler marker color for deleted content.
   */
  EditorOverviewRulerDeletedForeground = 'editorOverviewRuler-deletedForeground',
  /**
   * Search editor text input box border.
   */
  SearchEditorTextInputBorder = 'searchEditor-textInputBorder',
  /**
   * The background color of the terminal, this allows coloring the terminal
   * differently to the panel.
   */
  TerminalBackground = 'terminal-background',
  /**
   * The foreground color of the terminal.
   */
  TerminalForeground = 'terminal-foreground',
  /**
   * The foreground color of the terminal cursor.
   */
  TerminalCursorForeground = 'terminalCursor-foreground',
  /**
   * The background color of the terminal cursor. Allows customizing the color
   * of a character overlapped by a block cursor.
   */
  TerminalCursorBackground = 'terminalCursor-background',
  /**
   * The selection background color of the terminal.
   */
  TerminalSelectionBackground = 'terminal-selectionBackground',
  /**
   * The color of the border that separates split panes within the terminal.
   * This defaults to panel.border.
   */
  TerminalBorder = 'terminal-border',
  /**
   * Background color for the buttons on the Welcome page.
   */
  WelcomePageButtonBackground = 'welcomePage-buttonBackground',
  /**
   * Hover background color for the buttons on the Welcome page.
   */
  WelcomePageButtonHoverBackground = 'welcomePage-buttonHoverBackground',
  /**
   * Background color for the Welcome page.
   */
  WelcomePageBackground = 'welcomePage-background',
  /**
   * Background color for the embedded editors on the Interactive Playground.
   */
  WalkThroughEmbeddedEditorBackground = 'walkThrough-embeddedEditorBackground',
}
